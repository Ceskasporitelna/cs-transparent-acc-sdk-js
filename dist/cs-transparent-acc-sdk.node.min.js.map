{"version":3,"sources":["webpack:///cs-transparent-acc-sdk.node.min.js","webpack:///webpack/bootstrap 8b881ecfad0d013a0e64","webpack:///./lib/transparent-acc.ts","webpack:///external \"cs-core-sdk\"","webpack:///./lib/accounts.ts","webpack:///./lib/transactions.ts"],"names":["module","exports","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","getClient","sharedClient","TransparentAccountsClient","CSCoreSDK","config","__extends","this","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","hasOwnProperty","__","constructor","prototype","create","defineProperty","value","accounts_1","_super","_this","signingKey","get","TransparentAccountsResource","getPath","enumerable","configurable","WebApiClient","require","transformResponse","account","EntityUtils","addIdProperty","addDatesFromISO","resourcifyResponse","accountListing","accountResource","transactions","transactions_1","apply","arguments","list","params","ResourceUtils","CallPaginatedListWithSuffix","response","items","forEach","item","withId","TransparentAccountResource","_path","_client","Resource","CallGet","then","TransactionsResource","InstanceResource","transformDatesToISO","addDatesToItems","TransactionsSortableFields"],"mappings":"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","file":"cs-transparent-acc-sdk.node.min.js","sourcesContent":["module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || (function () {\n\t    var extendStatics = Object.setPrototypeOf ||\n\t        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n\t        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n\t    return function (d, b) {\n\t        extendStatics(d, b);\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t})();\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar CSCoreSDK = __webpack_require__(1);\n\tvar accounts_1 = __webpack_require__(2);\n\tvar sharedClient = null;\n\t/**\n\t * Returns the singleton TransparentAccountsClient\n\t * @returns {TransparentAccountsClient}\n\t */\n\tfunction getClient() {\n\t    if (sharedClient === null) {\n\t        sharedClient = new TransparentAccountsClient(CSCoreSDK.config);\n\t    }\n\t    return sharedClient;\n\t}\n\texports.getClient = getClient;\n\t/**\n\t * Transparent Accounts client\n\t * @class TransparentAccountsClient\n\t * @extends {CSCoreSDK.WebApiClient}\n\t */\n\tvar TransparentAccountsClient = /** @class */ (function (_super) {\n\t    __extends(TransparentAccountsClient, _super);\n\t    /**\n\t     * Creates new instance of TransparentAccClient\n\t     * @param {CSCoreSDK.WebApiConfiguration} config - object that configures this client\n\t     */\n\t    function TransparentAccountsClient(config) {\n\t        var _this = _super.call(this, config, '/api/v2/transparentAccounts') || this;\n\t        //Disable signing as it is not supported for Transparent Accounts API.\n\t        _this.config.signingKey = null;\n\t        return _this;\n\t    }\n\t    Object.defineProperty(TransparentAccountsClient.prototype, \"accounts\", {\n\t        /**\n\t         * List Transparent accounts and get a detail of them\n\t         * @returns {TransparentAccountsResource}\n\t         */\n\t        get: function () {\n\t            return new accounts_1.TransparentAccountsResource(this.getPath(), this);\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    return TransparentAccountsClient;\n\t}(CSCoreSDK.WebApiClient));\n\texports.TransparentAccountsClient = TransparentAccountsClient;\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = require(\"cs-core-sdk\");\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || (function () {\n\t    var extendStatics = Object.setPrototypeOf ||\n\t        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n\t        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n\t    return function (d, b) {\n\t        extendStatics(d, b);\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t})();\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar CSCoreSDK = __webpack_require__(1);\n\tvar transactions_1 = __webpack_require__(3);\n\t/**\n\t * List Transparent accounts and get a detail of them\n\t * @class TransparentAccountsResource\n\t * @extends {CSCoreSDK.Resource}\n\t * @implements {CSCoreSDK.PaginatedListEnabled<TransparentAccount>}\n\t * @implements {CSCoreSDK.HasInstanceResource<TransparentAccountResource>}\n\t */\n\tvar TransparentAccountsResource = /** @class */ (function (_super) {\n\t    __extends(TransparentAccountsResource, _super);\n\t    function TransparentAccountsResource() {\n\t        var _this = _super !== null && _super.apply(this, arguments) || this;\n\t        /**\n\t         * List Transparent accounts\n\t         * @param {TransparentAccountsParameters=} params\n\t         * @returns {Promise<TransparentAccountList>}\n\t         */\n\t        _this.list = function (params) {\n\t            return CSCoreSDK.ResourceUtils.CallPaginatedListWithSuffix(_this, null, 'accounts', params, function (response) {\n\t                response.items.forEach(function (item) {\n\t                    // transform ISO strings to native Date objects and add id property\n\t                    transformResponse(item);\n\t                    // add convenient get and transactions getters to the account listing\n\t                    resourcifyResponse(item, _this.withId(item.id));\n\t                });\n\t                return response;\n\t            });\n\t        };\n\t        /**\n\t         * Get a single TransparentAccountResource for an account with a given id\n\t         * @param {string|number} id\n\t         * @returns {TransparentAccountResource}\n\t         */\n\t        _this.withId = function (id) {\n\t            return new TransparentAccountResource(id, _this._path, _this._client);\n\t        };\n\t        return _this;\n\t    }\n\t    return TransparentAccountsResource;\n\t}(CSCoreSDK.Resource));\n\texports.TransparentAccountsResource = TransparentAccountsResource;\n\t/**\n\t * Get a detail of an account\n\t * @class TransparentAccountResource\n\t * @extends {CSCoreSDK.InstanceResource}\n\t * @implements {CSCoreSDK.GetEnabled<TransparentAccount>}\n\t */\n\tvar TransparentAccountResource = /** @class */ (function (_super) {\n\t    __extends(TransparentAccountResource, _super);\n\t    function TransparentAccountResource() {\n\t        var _this = _super !== null && _super.apply(this, arguments) || this;\n\t        /**\n\t         * Returns detail of the account in a Promise\n\t         * @returns {Promise<TransparentAccount>}\n\t         */\n\t        _this.get = function () {\n\t            return CSCoreSDK.ResourceUtils.CallGet(_this, null).then(function (account) {\n\t                // transform ISO strings to native Date objects and add id property\n\t                transformResponse(account);\n\t                // add convenient transactions getter to the account listing\n\t                account.transactions = _this.transactions;\n\t                return account;\n\t            });\n\t        };\n\t        return _this;\n\t    }\n\t    Object.defineProperty(TransparentAccountResource.prototype, \"transactions\", {\n\t        /**\n\t         * Returns TransactionResource for listing transactions of the account\n\t         * @returns {TransactionsResource}\n\t         */\n\t        get: function () {\n\t            return new transactions_1.TransactionsResource(this.getPath() + \"/transactions\", this._client);\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    return TransparentAccountResource;\n\t}(CSCoreSDK.InstanceResource));\n\texports.TransparentAccountResource = TransparentAccountResource;\n\tfunction transformResponse(account) {\n\t    CSCoreSDK.EntityUtils.addIdProperty(account, \"accountNumber\");\n\t    CSCoreSDK.EntityUtils.addDatesFromISO(['transparencyFrom', 'transparencyTo', 'publicationTo', 'actualizationDate'], account);\n\t}\n\tfunction resourcifyResponse(accountListing, accountResource) {\n\t    accountListing.get = accountResource.get;\n\t    accountListing.transactions = accountResource.transactions;\n\t}\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || (function () {\n\t    var extendStatics = Object.setPrototypeOf ||\n\t        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n\t        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n\t    return function (d, b) {\n\t        extendStatics(d, b);\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t})();\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar CSCoreSDK = __webpack_require__(1);\n\t/**\n\t * List Transactions of an account\n\t * @class TransactionsResource\n\t * @extends {CSCoreSDK.Resource}\n\t * @implements {CSCoreSDK.PaginatedListEnabled<Transaction>}\n\t */\n\tvar TransactionsResource = /** @class */ (function (_super) {\n\t    __extends(TransactionsResource, _super);\n\t    function TransactionsResource() {\n\t        var _this = _super !== null && _super.apply(this, arguments) || this;\n\t        /**\n\t         * List all transactions of the account\n\t         * @param {TransactionsParameters} params\n\t         * @returns {Promise<TransactionList>}\n\t         */\n\t        _this.list = function (params) {\n\t            CSCoreSDK.EntityUtils.transformDatesToISO(['dateFrom', 'dateTo'], params);\n\t            return CSCoreSDK.ResourceUtils.CallPaginatedListWithSuffix(_this, null, \"transactions\", params, function (response) {\n\t                CSCoreSDK.EntityUtils.addDatesToItems(['dueDate', 'processingDate'], response);\n\t                return response;\n\t            });\n\t        };\n\t        return _this;\n\t    }\n\t    return TransactionsResource;\n\t}(CSCoreSDK.Resource));\n\texports.TransactionsResource = TransactionsResource;\n\t/**\n\t * The enum Transactions sortable fields.\n\t * @enum TransactionsSortableFields\n\t */\n\tvar TransactionsSortableFields;\n\t(function (TransactionsSortableFields) {\n\t    TransactionsSortableFields[\"AMOUNT\"] = \"amount\";\n\t    TransactionsSortableFields[\"PROCESSING_DATE\"] = \"processingDate\";\n\t    TransactionsSortableFields[\"SENDER\"] = \"sender\";\n\t})(TransactionsSortableFields = exports.TransactionsSortableFields || (exports.TransactionsSortableFields = {}));\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// cs-transparent-acc-sdk.node.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8b881ecfad0d013a0e64","import * as CSCoreSDK from 'cs-core-sdk';\nimport { TransparentAccountsResource } from './accounts';\n\nvar sharedClient: TransparentAccountsClient = null;\n\n/**\n * Returns the singleton TransparentAccountsClient\n * @returns {TransparentAccountsClient}\n */\nexport function getClient(): TransparentAccountsClient {\n  if (sharedClient === null) {\n    sharedClient = new TransparentAccountsClient(CSCoreSDK.config);\n  }\n  return sharedClient;\n}\n\n/**\n * Transparent Accounts client \n * @class TransparentAccountsClient\n * @extends {CSCoreSDK.WebApiClient}\n */\nexport class TransparentAccountsClient extends CSCoreSDK.WebApiClient {\n\n  /**\n   * Creates new instance of TransparentAccClient\n   * @param {CSCoreSDK.WebApiConfiguration} config - object that configures this client\n   */\n  constructor(config: CSCoreSDK.WebApiConfiguration) {\n    super(config, '/api/v2/transparentAccounts');\n\n    //Disable signing as it is not supported for Transparent Accounts API.\n    this.config.signingKey = null;\n  }\n\n  /**\n   * List Transparent accounts and get a detail of them\n   * @returns {TransparentAccountsResource}\n   */\n  get accounts(): TransparentAccountsResource {\n    return new TransparentAccountsResource(this.getPath(), this);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./lib/transparent-acc.ts","module.exports = require(\"cs-core-sdk\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cs-core-sdk\"\n// module id = 1\n// module chunks = 0","import * as CSCoreSDK from 'cs-core-sdk';\nimport { TransactionsResource } from './transactions';\n\n/**\n * List Transparent accounts and get a detail of them  \n * @class TransparentAccountsResource\n * @extends {CSCoreSDK.Resource}\n * @implements {CSCoreSDK.PaginatedListEnabled<TransparentAccount>}\n * @implements {CSCoreSDK.HasInstanceResource<TransparentAccountResource>}\n */\nexport class TransparentAccountsResource extends CSCoreSDK.Resource\n  implements CSCoreSDK.PaginatedListEnabled<TransparentAccount>,\n  CSCoreSDK.HasInstanceResource<TransparentAccountResource> {\n\n  /**\n   * List Transparent accounts\n   * @param {TransparentAccountsParameters=} params\n   * @returns {Promise<TransparentAccountList>}\n   */\n  list = (params?: TransparentAccountsParameters): Promise<TransparentAccountList> => {\n\n    return CSCoreSDK.ResourceUtils.CallPaginatedListWithSuffix(this, null, 'accounts', params, response => {\n\n      response.items.forEach((item: TransparentAccount) => {\n\n        // transform ISO strings to native Date objects and add id property\n        transformResponse(item);\n\n        // add convenient get and transactions getters to the account listing\n        resourcifyResponse(item, this.withId(item.id));\n      })\n      return response;\n    });\n  }\n\n  /**\n   * Get a single TransparentAccountResource for an account with a given id\n   * @param {string|number} id\n   * @returns {TransparentAccountResource}\n   */\n  withId = (id: string | number): TransparentAccountResource => {\n    return new TransparentAccountResource(id, this._path, this._client);\n  }\n\n}\n\n/**\n * Get a detail of an account\n * @class TransparentAccountResource\n * @extends {CSCoreSDK.InstanceResource}\n * @implements {CSCoreSDK.GetEnabled<TransparentAccount>}\n */\nexport class TransparentAccountResource extends CSCoreSDK.InstanceResource\n  implements CSCoreSDK.GetEnabled<TransparentAccount> {\n\n  /**\n   * Returns detail of the account in a Promise  \n   * @returns {Promise<TransparentAccount>}\n   */\n  get = (): Promise<TransparentAccount> => {\n    return CSCoreSDK.ResourceUtils.CallGet(this, null).then((account: TransparentAccount) => {\n\n      // transform ISO strings to native Date objects and add id property\n      transformResponse(account);\n\n      // add convenient transactions getter to the account listing\n      account.transactions = this.transactions;\n      return account;\n    });\n  }\n\n  /**\n   * Returns TransactionResource for listing transactions of the account  \n   * @returns {TransactionsResource}\n   */\n  get transactions(): TransactionsResource {\n    return new TransactionsResource(this.getPath() + \"/transactions\", this._client);\n  }\n}\n\nfunction transformResponse(account: TransparentAccount): void {\n  CSCoreSDK.EntityUtils.addIdProperty(account, \"accountNumber\");\n  CSCoreSDK.EntityUtils.addDatesFromISO(['transparencyFrom', 'transparencyTo', 'publicationTo', 'actualizationDate'], account);\n}\n\nfunction resourcifyResponse(accountListing: TransparentAccount, accountResource: TransparentAccountResource) {\n  accountListing.get = accountResource.get;\n  accountListing.transactions = accountResource.transactions;\n}\n\n/**\n * @interface TransparentAccountList\n * @extends {CSCoreSDK.PaginatedListResponse<TransparentAccount>}\n */\nexport interface TransparentAccountList extends CSCoreSDK.PaginatedListResponse<TransparentAccount> { }\n\n/**\n * @interface TransparentAccount\n */\nexport interface TransparentAccount {\n\n  /**\n   * Accounts id\n   */\n  id: string;\n\n  /**\n  * bank code\n  */\n  bankCode: number;\n\n  /**\n  * the date from which the account is transparent\n  */\n  transparencyFrom: Date;\n\n  /**\n  * date by which the account is transparent (including)\n  */\n  transparencyTo: Date;\n\n  /**\n  * date by which entries are valid\n  */\n  publicationTo: Date;\n\n  /**\n  * date of last update\n  */\n  actualizationDate?: Date;\n\n  /**\n  * actual account balance\n  */\n  balance?: number;\n\n  /**\n  * accounts currency\n  */\n  currency?: string;\n\n  /**\n  * accounts name\n  */\n  name?: string;\n\n  /**\n  * accounts description\n  */\n  description?: string;\n\n  /**\n  * accounts note\n  */\n  note?: string;\n\n  /**\n  * accounts iban\n  */\n  iban: string;\n\n  /**\n  * account number with prefix\n  */\n  accountNumber: string;\n\n  /**\n  * Convenience getter for getting accounts's transactions resource\n  */\n  transactions: TransactionsResource;\n\n  /**\n   * Convenience getter for getting accounts's detail\n   * @returns {Promise<TransparentAccount>}\n   */\n  get: () => Promise<TransparentAccount>;\n}\n\n/**\n * @interface TransparentAccountsParameters\n * @extends {CSCoreSDK.Paginated}\n */\nexport interface TransparentAccountsParameters extends CSCoreSDK.Paginated { \n\n  /**\n   * For filtering accounts by name or description Example: ucet pana Novaka.\n   */\n  filter?: string;\n}\n\n\n// WEBPACK FOOTER //\n// ./lib/accounts.ts","import * as CSCoreSDK from 'cs-core-sdk';\n\n/**\n * List Transactions of an account\n * @class TransactionsResource\n * @extends {CSCoreSDK.Resource}\n * @implements {CSCoreSDK.PaginatedListEnabled<Transaction>}\n */\nexport class TransactionsResource extends CSCoreSDK.Resource implements\n  CSCoreSDK.PaginatedListEnabled<Transaction> {\n\n  /**\n   * List all transactions of the account  \n   * @param {TransactionsParameters} params\n   * @returns {Promise<TransactionList>}\n   */\n  list = (params: TransactionsParameters): Promise<TransactionList> => {\n\n    CSCoreSDK.EntityUtils.transformDatesToISO(['dateFrom', 'dateTo'], params);\n\n    return CSCoreSDK.ResourceUtils.CallPaginatedListWithSuffix(this, null, \"transactions\", params, response => {\n\n      CSCoreSDK.EntityUtils.addDatesToItems(['dueDate', 'processingDate'], response);\n      return response;\n\n    });\n  }\n\n}\n\n/**\n * The enum Transactions sortable fields.\n * @enum TransactionsSortableFields\n */\nexport enum TransactionsSortableFields {\n  AMOUNT = 'amount',\n  PROCESSING_DATE = 'processingDate',\n  SENDER = 'sender',\n}\n\n/**\n * @interface TransactionsParameters\n * @extends {CSCoreSDK.Paginated}\n * @extends {CSCoreSDK.Paginated}\n */\nexport interface TransactionsParameters extends CSCoreSDK.Paginated, CSCoreSDK.Sortable<TransactionsSortableFields> {\n\n  /**\n   * For filtering transactions by date\n   */\n  dateFrom?: Date;\n\n  /**\n   * For filtering transactions by date\n   */\n  dateTo?: Date;\n\n  /**\n   * For filtering transactions by other parameters (account number, name, variable and constant symbol) Example: ucet pana Novaka.\n   */\n  filter?: string;\n}\n\n/**\n * @interface TransactionList\n * @extends {CSCoreSDK.PaginatedListResponse<Transaction>}\n */\nexport interface TransactionList extends CSCoreSDK.PaginatedListResponse<Transaction> { }\n\n/**\n * @interface Transaction\n */\nexport interface Transaction {\n\n  /**\n  * transaction amount\n  */\n  amount: TransactionAmount;\n\n  /**\n  * transaction type\n  */\n  type: string;\n\n  /**\n  * transaction date\n  */\n  dueDate: Date;\n\n  /**\n  * transaction valuation date\n  */\n  processingDate: Date;\n\n  /**\n  * information about the sender\n  */\n  sender: Sender;\n\n  /**\n  * information about the receiver\n  */\n  receiver: Receiver;\n\n  /**\n  * Get description of transaction type\n  * f.e. Úhrada\n  */\n  typeDescription?: string;\n}\n\n/**\n * @interface TransactionAmount\n */\nexport interface TransactionAmount {\n\n  /**\n  * amount value\n  */\n  value: number;\n\n  /**\n  * amount precision in decimals\n  */\n  precision: number;\n\n  /**\n  * amount currency\n  */\n  currency: string;\n}\n\n/**\n * @interface Sender\n */\nexport interface Sender {\n\n  /**\n  * sender name\n  */\n  name?: string;\n\n  /**\n  * sender transaction description\n  */\n  description?: string;\n\n  /**\n  * constant symbol\n  */\n  constantSymbol?: string;\n\n  /**\n  * specific symbol\n  */\n  specificSymbol?: string;\n\n  /**\n  * specific symbol party\n  */\n  specificSymbolParty?: string;\n\n  /**\n  * variable symbol\n  */\n  variableSymbol?: string;\n\n  /**\n  * sender account number\n  */\n  accountNumber: string;\n\n  /**\n  * sender bank code\n  */\n  bankCode: string;\n\n  /**\n  * sender account IBAN\n  */\n  iban: string;\n}\n\n/**\n * @interface Receiver\n */\nexport interface Receiver {\n\n  /**\n  * receiver account IBAN\n  */\n  iban: string;\n\n  /**\n  * receiver account number\n  */\n  accountNumber: string;\n\n  /**\n  * receiver bank code\n  */\n  bankCode: string;\n}\n\n\n// WEBPACK FOOTER //\n// ./lib/transactions.ts"],"sourceRoot":""}